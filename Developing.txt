4/30/25
  Freaking awesome Plaid devs.
  - /categories endpoint is deprecated, removed functionality
  - Instead using /transactions/refresh to sync categories table and update
  - Focus Points
      * HANDLED: Separation of Logic,	Plaid/Teller handled in separate files
      * DRY Principle: Needs work,	Lots of copy-paste in refresh logic
      * HANDLED: Transaction changes, DB schema and insertion logic robust
      * Testability: Not really a priority but, implement tests etc
      * Maintainability: Needs work,	Moderate	Long methods, some overloading of function responsibilities (Eg. /transactions/refresh)
      * Frontend/Backend Data Sync - Needs to be fixed:	Likely reason why transactions donâ€™t show in frontend


4/24/2025
Caught up cleaning codebase - Teller seems like it supports payments well
  - Decide between next focus as Investments Link or Teller Payments
Manual CSV upload sees the files and all, component works but need to fix 
  backend route to point to an active function in the backend I think.
  Focus points:
    - Integrate data from RSAssistant in a page somewhere
    - Functionality to hide an account but not delete it
    - Automate teller API refreshes
    - Cleanup codebase
      * Deprecate duplicated / unused backend routes
      * Ensure separation of concerns - that routes are in routes, sql logic in 
        sql,    
        helpers handle the API calls.
      * Decide whether to keep product calls segreated by provider
          eg. plaid_transactions.py , teller_transactions.py endpoints vs.
          transactions.py endpoint which determines whether to route to plaid or teller
          handling modules
      * Remove stale modules
      * Remove stale / unused components

4/21/25
  Accounts.vue officially can link new Plaid accounts again. Need to test Teller.
    Still to Implement:
      * Checking / Savings / Credit button toggles
      * Persist user modified fields in UpdateTransactionsTable.vue
      * Automatic Refresh of Accounts.vue page on Link Success

4/16//25

  Accounts.vue is looking rather clean. Routes completed for uploading an access token and saving account (Plaid)
  Checking / Savings / Credit button toggles do not work.
  Need to persist user modified fields in the UpdateTransactionsTable.vue

  - Teller looks to be building support for transfers

  - UI Elements need to work
    :NetYearComparisonChart
    :RecurringTransactionSection
    :NotificationsBar

* FOCUSPOINT *
  ==========
Looking to integrate functionality for UpdateTransactionsTable.vue component - for start, plan is likely to manually enter a Due Date & payment info. This should trigger an alert on the main dashboard that does not go away until a transaction matching the recurring match is logged for the payment period.


  ================== ^ Update ^
Cleaning up AccountsTable.vue buttons
  Integrate functionality for UpdateTransactionsTable.vue to persist user changes
  Adding routes and components for upload/download CSV
    * First finish the AccountsTable Cleanup
      - New upload download buttons will be in a dedicated component
    * Then build out download components and routes
    * Then build out upload components and routes

  Also Checking/Savings/Credit button toggles need to work but don't


4/14/25

  Maybe looking to add a page for general notes. Could use it for
  dev process. Could implement it into a future build.

  Currently: 
  :- Back to working on TellerIO. Looking to set up a webhook and see what do.
    * Teller looks to now support Payments (Zelle) let us fucking go.

    - Institution is saved as ID instead of name, updates to sql/account-logic.py
      for correct upsertion
    - Looking at refresh logic for individual accounts
    - Add support for investments
    - Add support for Plaid Transfer
    - Multiple UI elements still do not work
      * NetYearComparisonChart
      * RecurringTransactionSection
      * UpdateTransactionsTable -- Need to persist user modified changes/fields
      * NotificationsBar
    - views
      * Accounts - General tidy, toggle hiding of buttons
      * Dashboard
