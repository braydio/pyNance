"""Add planning scenarios

Revision ID: 18acdf1fa2ca
Revises: 86fc66ae2627
Create Date: 2025-08-18 14:22:07.566441

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "18acdf1fa2ca"
down_revision = "86fc66ae2627"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "planning_scenarios",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=120), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "planned_bills",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("scenario_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=120), nullable=False),
        sa.Column("amount_cents", sa.Integer(), nullable=False),
        sa.Column("due_date", sa.Date(), nullable=True),
        sa.Column("category", sa.String(length=80), nullable=True),
        sa.Column("predicted", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.CheckConstraint("amount_cents >= 0", name="ck_planned_bills_amount_nonneg"),
        sa.ForeignKeyConstraint(
            ["scenario_id"], ["planning_scenarios.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("planned_bills", schema=None) as batch_op:
        batch_op.create_index(
            "ix_planned_bills_scenario_due", ["scenario_id", "due_date"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_planned_bills_scenario_id"), ["scenario_id"], unique=False
        )

    op.create_table(
        "scenario_allocations",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("scenario_id", sa.UUID(), nullable=False),
        sa.Column("target", sa.String(length=160), nullable=False),
        sa.Column(
            "kind", sa.Enum("fixed", "percent", name="allocation_type"), nullable=False
        ),
        sa.Column("value", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.CheckConstraint(
            "(kind = 'fixed' AND value >= 0) OR (kind = 'percent' AND value BETWEEN 0 AND 100)",
            name="ck_alloc_value_semantics",
        ),
        sa.ForeignKeyConstraint(
            ["scenario_id"], ["planning_scenarios.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("scenario_allocations", schema=None) as batch_op:
        batch_op.create_index(
            "ix_allocations_scenario_kind", ["scenario_id", "kind"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_scenario_allocations_scenario_id"),
            ["scenario_id"],
            unique=False,
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("scenario_allocations", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_scenario_allocations_scenario_id"))
        batch_op.drop_index("ix_allocations_scenario_kind")

    op.drop_table("scenario_allocations")
    with op.batch_alter_table("planned_bills", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_planned_bills_scenario_id"))
        batch_op.drop_index("ix_planned_bills_scenario_due")

    op.drop_table("planned_bills")
    op.drop_table("planning_scenarios")
    # ### end Alembic commands ###
