"""transactions and other tables

Revision ID: e483addee459
Revises: f6f1619bda3c
Create Date: 2025-09-24 02:41:34.163120

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "e483addee459"
down_revision = "f6f1619bda3c"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "account_groups",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("user_id", sa.String(length=64), nullable=False),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("position", sa.Integer(), nullable=False),
        sa.Column("accent", sa.String(length=64), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    with op.batch_alter_table("account_groups", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_account_groups_user_id"), ["user_id"], unique=False
        )

    op.create_table(
        "account_group_preferences",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.String(length=64), nullable=False),
        sa.Column("active_group_id", sa.String(length=36), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["active_group_id"], ["account_groups.id"], ondelete="SET NULL"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("account_group_preferences", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_account_group_preferences_active_group_id"),
            ["active_group_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_account_group_preferences_user_id"), ["user_id"], unique=True
        )

    op.create_table(
        "account_group_memberships",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("group_id", sa.String(length=36), nullable=False),
        sa.Column("account_id", sa.String(length=64), nullable=False),
        sa.Column("position", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["account_id"], ["accounts.account_id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["group_id"], ["account_groups.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "group_id", "account_id", name="uq_account_group_membership"
        ),
    )
    with op.batch_alter_table("account_group_memberships", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_account_group_memberships_account_id"),
            ["account_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_account_group_memberships_group_id"),
            ["group_id"],
            unique=False,
        )

    with op.batch_alter_table("plaid_accounts", schema=None) as batch_op:
        batch_op.alter_column("is_active", existing_type=sa.BOOLEAN(), nullable=False)

    with op.batch_alter_table("planned_bills", schema=None) as batch_op:
        batch_op.alter_column(
            "id", existing_type=sa.NUMERIC(), type_=sa.UUID(), existing_nullable=False
        )
        batch_op.alter_column(
            "scenario_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=False,
        )

    with op.batch_alter_table("planning_scenarios", schema=None) as batch_op:
        batch_op.alter_column(
            "id", existing_type=sa.NUMERIC(), type_=sa.UUID(), existing_nullable=False
        )

    with op.batch_alter_table("scenario_allocations", schema=None) as batch_op:
        batch_op.alter_column(
            "id", existing_type=sa.NUMERIC(), type_=sa.UUID(), existing_nullable=False
        )
        batch_op.alter_column(
            "scenario_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=False,
        )

    with op.batch_alter_table("transaction_rules", schema=None) as batch_op:
        batch_op.alter_column("is_active", existing_type=sa.BOOLEAN(), nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("transaction_rules", schema=None) as batch_op:
        batch_op.alter_column("is_active", existing_type=sa.BOOLEAN(), nullable=True)

    with op.batch_alter_table("scenario_allocations", schema=None) as batch_op:
        batch_op.alter_column(
            "scenario_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "id", existing_type=sa.UUID(), type_=sa.NUMERIC(), existing_nullable=False
        )

    with op.batch_alter_table("planning_scenarios", schema=None) as batch_op:
        batch_op.alter_column(
            "id", existing_type=sa.UUID(), type_=sa.NUMERIC(), existing_nullable=False
        )

    with op.batch_alter_table("planned_bills", schema=None) as batch_op:
        batch_op.alter_column(
            "scenario_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "id", existing_type=sa.UUID(), type_=sa.NUMERIC(), existing_nullable=False
        )

    with op.batch_alter_table("plaid_accounts", schema=None) as batch_op:
        batch_op.alter_column("is_active", existing_type=sa.BOOLEAN(), nullable=True)

    with op.batch_alter_table("account_group_memberships", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_account_group_memberships_group_id"))
        batch_op.drop_index(batch_op.f("ix_account_group_memberships_account_id"))

    op.drop_table("account_group_memberships")
    with op.batch_alter_table("account_group_preferences", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_account_group_preferences_user_id"))
        batch_op.drop_index(batch_op.f("ix_account_group_preferences_active_group_id"))

    op.drop_table("account_group_preferences")
    with op.batch_alter_table("account_groups", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_account_groups_user_id"))

    op.drop_table("account_groups")
    # ### end Alembic commands ###
