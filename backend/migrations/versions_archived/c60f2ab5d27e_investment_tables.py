"""investment tables

Revision ID: c60f2ab5d27e
Revises: f71197d4f032
Create Date: 2025-09-03 22:12:19.275035

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "c60f2ab5d27e"
down_revision = "f71197d4f032"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "securities",
        sa.Column("security_id", sa.String(length=128), nullable=False),
        sa.Column("name", sa.String(length=256), nullable=True),
        sa.Column("ticker_symbol", sa.String(length=64), nullable=True),
        sa.Column("cusip", sa.String(length=64), nullable=True),
        sa.Column("isin", sa.String(length=64), nullable=True),
        sa.Column("type", sa.String(length=64), nullable=True),
        sa.Column("is_cash_equivalent", sa.Boolean(), nullable=True),
        sa.Column("institution_price", sa.Float(), nullable=True),
        sa.Column("institution_price_as_of", sa.Date(), nullable=True),
        sa.Column("market_identifier_code", sa.String(length=64), nullable=True),
        sa.Column("iso_currency_code", sa.String(length=8), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("security_id"),
    )
    op.create_table(
        "investment_holdings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("account_id", sa.String(length=64), nullable=False),
        sa.Column("security_id", sa.String(length=128), nullable=False),
        sa.Column("quantity", sa.Float(), nullable=True),
        sa.Column("cost_basis", sa.Float(), nullable=True),
        sa.Column("institution_value", sa.Float(), nullable=True),
        sa.Column("as_of", sa.Date(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["accounts.account_id"],
        ),
        sa.ForeignKeyConstraint(
            ["security_id"],
            ["securities.security_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "account_id", "security_id", name="uq_holding_account_security"
        ),
    )
    with op.batch_alter_table("investment_holdings", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_investment_holdings_account_id"),
            ["account_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_investment_holdings_security_id"),
            ["security_id"],
            unique=False,
        )

    op.create_table(
        "investment_transactions",
        sa.Column("investment_transaction_id", sa.String(length=128), nullable=False),
        sa.Column("account_id", sa.String(length=64), nullable=False),
        sa.Column("security_id", sa.String(length=128), nullable=True),
        sa.Column("date", sa.Date(), nullable=True),
        sa.Column("amount", sa.Float(), nullable=True),
        sa.Column("price", sa.Float(), nullable=True),
        sa.Column("quantity", sa.Float(), nullable=True),
        sa.Column("subtype", sa.String(length=64), nullable=True),
        sa.Column("type", sa.String(length=64), nullable=True),
        sa.Column("name", sa.String(length=256), nullable=True),
        sa.Column("fees", sa.Float(), nullable=True),
        sa.Column("iso_currency_code", sa.String(length=8), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["accounts.account_id"],
        ),
        sa.ForeignKeyConstraint(
            ["security_id"],
            ["securities.security_id"],
        ),
        sa.PrimaryKeyConstraint("investment_transaction_id"),
    )
    with op.batch_alter_table("investment_transactions", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_investment_transactions_account_id"),
            ["account_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_investment_transactions_security_id"),
            ["security_id"],
            unique=False,
        )

    with op.batch_alter_table("planned_bills", schema=None) as batch_op:
        batch_op.alter_column(
            "id", existing_type=sa.NUMERIC(), type_=sa.UUID(), existing_nullable=False
        )
        batch_op.alter_column(
            "scenario_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=False,
        )

    with op.batch_alter_table("planning_scenarios", schema=None) as batch_op:
        batch_op.alter_column(
            "id", existing_type=sa.NUMERIC(), type_=sa.UUID(), existing_nullable=False
        )

    with op.batch_alter_table("scenario_allocations", schema=None) as batch_op:
        batch_op.alter_column(
            "id", existing_type=sa.NUMERIC(), type_=sa.UUID(), existing_nullable=False
        )
        batch_op.alter_column(
            "scenario_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=False,
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("scenario_allocations", schema=None) as batch_op:
        batch_op.alter_column(
            "scenario_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "id", existing_type=sa.UUID(), type_=sa.NUMERIC(), existing_nullable=False
        )

    with op.batch_alter_table("planning_scenarios", schema=None) as batch_op:
        batch_op.alter_column(
            "id", existing_type=sa.UUID(), type_=sa.NUMERIC(), existing_nullable=False
        )

    with op.batch_alter_table("planned_bills", schema=None) as batch_op:
        batch_op.alter_column(
            "scenario_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "id", existing_type=sa.UUID(), type_=sa.NUMERIC(), existing_nullable=False
        )

    with op.batch_alter_table("investment_transactions", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_investment_transactions_security_id"))
        batch_op.drop_index(batch_op.f("ix_investment_transactions_account_id"))

    op.drop_table("investment_transactions")
    with op.batch_alter_table("investment_holdings", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_investment_holdings_security_id"))
        batch_op.drop_index(batch_op.f("ix_investment_holdings_account_id"))

    op.drop_table("investment_holdings")
    op.drop_table("securities")
    # ### end Alembic commands ###
